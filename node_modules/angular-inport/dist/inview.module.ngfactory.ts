/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/linker/ng_module_factory';
import * as import1 from './inview.module';
import * as import2 from './utils/viewport-ruler';
import * as import3 from './utils/scroll-observable';
import * as import4 from '@angular/core/src/di/injector';
class NgInviewModuleInjector extends import0.NgModuleInjector<import1.NgInviewModule> {
  _NgInviewModule_0:import1.NgInviewModule;
  __WindowRuler_1:import2.WindowRuler;
  __ScrollObservable_2:import3.ScrollObservable;
  constructor(parent:import4.Injector) {
    super(parent,([] as any[]),([] as any[]));
  }
  get _WindowRuler_1():import2.WindowRuler {
    if ((this.__WindowRuler_1 == null)) { (this.__WindowRuler_1 = new import2.WindowRuler()); }
    return this.__WindowRuler_1;
  }
  get _ScrollObservable_2():import3.ScrollObservable {
    if ((this.__ScrollObservable_2 == null)) { (this.__ScrollObservable_2 = new import3.ScrollObservable(this._WindowRuler_1)); }
    return this.__ScrollObservable_2;
  }
  createInternal():import1.NgInviewModule {
    this._NgInviewModule_0 = new import1.NgInviewModule();
    return this._NgInviewModule_0;
  }
  getInternal(token:any,notFoundResult:any):any {
    if ((token === import1.NgInviewModule)) { return this._NgInviewModule_0; }
    if ((token === import2.WindowRuler)) { return this._WindowRuler_1; }
    if ((token === import3.ScrollObservable)) { return this._ScrollObservable_2; }
    return notFoundResult;
  }
  destroyInternal():void {
  }
}
export const NgInviewModuleNgFactory:import0.NgModuleFactory<import1.NgInviewModule> = new import0.NgModuleFactory(NgInviewModuleInjector,import1.NgInviewModule);